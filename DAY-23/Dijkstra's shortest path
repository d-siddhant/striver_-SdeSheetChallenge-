vector<int> dijkstra(vector<vector<int>> &v, int n, int e, int source) {
    // Write your code here.
    vector<pair<int,int>> adj[n];
    for(int i=0;i<e;i++){
        adj[v[i][0]].push_back({v[i][1],v[i][2]});
        adj[v[i][1]].push_back({v[i][0],v[i][2]});
    }
    vector<int> dis(n,INT_MAX);
  priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>> pq;
    pq.push({0,source});
    dis[0]=0;
    while(!pq.empty()){
        int p=pq.top().first;
        int d=pq.top().second;
        pq.pop();
        for(auto it=adj[d].begin();it!=adj[d].end();it++){
            int xx=it->first;
            int yy=it->second;
            if(dis[xx]>dis[d]+yy){
                dis[xx]=dis[d]+yy;
                pq.push({dis[xx],xx});
            }
        }
    }
    return dis;
}
