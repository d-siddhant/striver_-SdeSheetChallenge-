#include<bits/stdc++.h>
vector<int> BFS(int v, vector<pair<int, int>> e)
{
    // Write your code here
    unordered_map<int,set<int>> adj;
    vector<int> vis(v,0);
    int E=e.size();
     for(int i=0;i<E;i++){
        adj[e[i].first].insert(e[i].second);
        adj[e[i].second].insert(e[i].first);
    }
       vector<int> ans;
    for(int i=0;i<v;i++){
        if(!vis[i]){
            queue<int> q;
            q.push(i);
            vis[i]=1;
          
            while(!q.empty()){
                int node=q.front();
                q.pop();
                ans.push_back(node);
     
                for(auto it:adj[node]){
                    if(!vis[it]) {
                        q.push(it);
                        vis[it]=1;
                    }
                }
            }
  
        }
    }
   return ans;
}
